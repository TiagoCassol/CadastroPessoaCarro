/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.senactech.MCadastroPessoa.view;

import br.com.senactech.MCadastroPessoa.util.ValidaCPF;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.regex.PatternSyntaxException;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import static mCadastroPessoaJF.MCadastroPessoaJF.cadPessoas;
import static mCadastroPessoaJF.MCadastroPessoaJF.cadCarros;
import static mCadastroPessoaJF.MCadastroPessoaJF.cadPessoas;
import br.com.senactech.MCadastroPessoa.model.Carro;
import br.com.senactech.MCadastroPessoa.model.Pessoa;
import br.com.senactech.MCadastroPessoa.services.CarroServicos;
import br.com.senactech.MCadastroPessoa.services.PessoaServicos;
import br.com.senactech.MCadastroPessoa.services.ServicosFactory;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author casso
 */
public class carroCadastro extends javax.swing.JFrame {

    JButton btnClick = null;

    /**
     * Creates new form carroCadastro
     */
    public carroCadastro() throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        cadPessoas.mokPessoas();
        // cadCarros.mokCarro();
        //addRowToTable();
        addRowToTableBD();
    }

    public void addRowToTable() {
        //cria obj model e recebe a modelagem da tabela jtPessoa do JFrame
        DefaultTableModel model = (DefaultTableModel) jtCarro.getModel();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        Object rowData[] = new Object[4];//cria vetor para as colunas da tabela
        for (Carro c : cadCarros.getAll()) {
            rowData[0] = c.getPlaca();
            rowData[1] = c.getMarca();
            rowData[2] = c.getModelo();
            rowData[3] = cadPessoas.getNomePes(c.getIdPessoa());

            model.addRow(rowData);
        }
    }

    public void addRowToTableBD() throws SQLException {
        //cria obj model e recebe a modelagem da tabela jtPessoa do JFrame
        DefaultTableModel model = (DefaultTableModel) jtCarro.getModel();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        Object rowData[] = new Object[4];//cria vetor para as colunas da tabela
        CarroServicos carroS = ServicosFactory.getCarroServicos();
        PessoaServicos pessoaS = ServicosFactory.getPessoaServicos();
        for (Carro c : carroS.getCarros()) {
            rowData[0] = c.getPlaca();
            rowData[1] = c.getMarca();
            rowData[2] = c.getModelo();
            rowData[3] = pessoaS.getNomePessoa(c.getIdPessoa());

            model.addRow(rowData);
        }
    }

    public void jTableFilterClear() {
        DefaultTableModel model = (DefaultTableModel) jtCarro.getModel();
        final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
        jtCarro.setRowSorter(sorter);
        sorter.setRowFilter(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     *
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtfPlaca = new javax.swing.JTextField();
        jtfModelo = new javax.swing.JTextField();
        jtfCor = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtCarro = new javax.swing.JTable();
        jbSalvar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jbDeletar = new javax.swing.JButton();
        jbSair = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jbEditar = new javax.swing.JButton();
        jbConfirmar = new javax.swing.JButton();
        jbPesqPlaca = new javax.swing.JButton();
        jcbMarca = new javax.swing.JComboBox<>();
        jtfAnoFabricacao = new javax.swing.JTextField();
        jtfAnoModelo = new javax.swing.JTextField();
        jtfCPFProp = new javax.swing.JTextField();
        jlNomeProp = new javax.swing.JLabel();
        jtfPortas = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setToolTipText("AAA1234");

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cadastro Carro");

        jLabel2.setText("Placa:");

        jLabel3.setText("Marca:");

        jLabel4.setText("Modelo:");

        jLabel5.setText("Ano de Fabricação:");

        jLabel6.setText("Ano do Modelo:");

        jLabel7.setText("Cor:");

        jLabel8.setText("Número de Portas:");

        jtfPlaca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfPlacaFocusLost(evt);
            }
        });

        jtfModelo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfModeloFocusLost(evt);
            }
        });

        jtCarro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Placa", "Marca", "Modelo", "Proprietário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtCarro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCarroMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtCarro);

        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jbLimparFocusLost(evt);
            }
        });
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jbDeletar.setText("Deletar");
        jbDeletar.setEnabled(false);
        jbDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeletarActionPerformed(evt);
            }
        });

        jbSair.setText("Sair");
        jbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSairActionPerformed(evt);
            }
        });

        jLabel9.setText("CPF:");

        jbEditar.setText("Editar");
        jbEditar.setEnabled(false);
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbConfirmar.setText("Confirmar");
        jbConfirmar.setEnabled(false);
        jbConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfirmarActionPerformed(evt);
            }
        });

        jbPesqPlaca.setForeground(new java.awt.Color(255, 0, 0));
        jbPesqPlaca.setText("Pesquisar Placa");
        jbPesqPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesqPlacaActionPerformed(evt);
            }
        });

        jcbMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Mercedes", "Jeep", "Fiat", "Mitsubishi", "Lincoln", "Land Rover", "Jaguard", "GM", "Peugeot" }));
        jcbMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMarcaActionPerformed(evt);
            }
        });

        jtfAnoFabricacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfAnoFabricacaoActionPerformed(evt);
            }
        });
        jtfAnoFabricacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfAnoFabricacaoKeyTyped(evt);
            }
        });

        jtfAnoModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfAnoModeloActionPerformed(evt);
            }
        });
        jtfAnoModelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfAnoModeloKeyTyped(evt);
            }
        });

        jtfCPFProp.setToolTipText("CPF");
        jtfCPFProp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCPFPropFocusLost(evt);
            }
        });
        jtfCPFProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCPFPropActionPerformed(evt);
            }
        });
        jtfCPFProp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfCPFPropKeyTyped(evt);
            }
        });

        jlNomeProp.setText("Proprietário...");
        jlNomeProp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jlNomePropFocusLost(evt);
            }
        });

        jtfPortas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPortasActionPerformed(evt);
            }
        });
        jtfPortas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfPortasKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfModelo)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jcbMarca, 0, 141, Short.MAX_VALUE)
                                    .addComponent(jtfPlaca))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbPesqPlaca)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jtfCPFProp)
                                    .addComponent(jtfAnoModelo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                    .addComponent(jtfCor, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jtfAnoFabricacao, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                                            .addComponent(jtfPortas)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlNomeProp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jbSalvar)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jbLimpar)
                                                .addGap(5, 5, 5))))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jbEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jbConfirmar)
                        .addGap(40, 40, 40)
                        .addComponent(jbDeletar)
                        .addGap(48, 48, 48)
                        .addComponent(jbSair)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jbPesqPlaca))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jtfAnoFabricacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfAnoModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtfCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jtfPortas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jtfCPFProp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlNomeProp))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalvar)
                    .addComponent(jbLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbDeletar)
                    .addComponent(jbSair)
                    .addComponent(jbEditar)
                    .addComponent(jbConfirmar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSairActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbSairActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        // TODO add your handling code here:
        jtfPlaca.setText("");
        jtfCor.setText("");
        jtfModelo.setText("");
        jtfAnoFabricacao.setText("");
        jtfAnoModelo.setText("");
        jcbMarca.setSelectedIndex(0);
        jtfPortas.setText("");
        jtfCPFProp.setText("");

        jbSalvar.setEnabled(true);
        jbPesqPlaca.setEnabled(true);
        jbEditar.setEnabled(false);
        jbConfirmar.setEnabled(false);
        jbDeletar.setEnabled(false);

        jtfPlaca.requestFocus();

    }//GEN-LAST:event_jbLimparActionPerformed

    private void jtfPlacaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfPlacaFocusLost
        // TODO add your handling code here:
        String placa = jtfPlaca.getText();
        jtfPlaca.setText(placa.toUpperCase());
    }//GEN-LAST:event_jtfPlacaFocusLost

    private void jbLimparFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jbLimparFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_jbLimparFocusLost

    private void jtfCPFPropFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCPFPropFocusLost
        try {
            // TODO add your handling code here:
            PessoaServicos pessoaS = ServicosFactory.getPessoaServicos();
            if (!ValidaCPF.isCPF(jtfCPFProp.getText())) {
                JOptionPane.showMessageDialog(this,
                        "CPF informado esta incorreto!!!",
                        ".: Erro :.", JOptionPane.ERROR_MESSAGE);
                jtfCPFProp.requestFocus();
            } else if (!pessoaS.verCPF(jtfCPFProp.getText())) {
                int id = pessoaS.getIdPessoa(jtfCPFProp.getText());
                jlNomeProp.setText(pessoaS.getNomePessoa(id));
            }
        } catch (SQLException ex) {
            Logger.getLogger(pessoaCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jtfCPFPropFocusLost


    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        // TODO add your handling code here:
        btnClick = (JButton) evt.getSource();
        if (validaInputs()) {
            try {
                CarroServicos carroS = ServicosFactory.getCarroServicos();
                PessoaServicos pessoaS = ServicosFactory.getPessoaServicos();
                int id = cadCarros.gerarId();
                int idPessoa = pessoaS.getIdPessoa(jtfCPFProp.getText());
                String placa = jtfPlaca.getText();
                String marca = jcbMarca.getSelectedItem().toString();
                String modelo = jtfModelo.getText();
                int anoF = Integer.parseInt(jtfAnoFabricacao.getText());
                int anoM = Integer.parseInt(jtfAnoModelo.getText());
                String cor = jtfCor.getText();
                int portas = Integer.parseInt(jtfPortas.getText());
                Carro c = new Carro(id, placa, marca, modelo, anoF, anoM, cor,
                        portas, idPessoa);
                //cadCarros.add(c);
                carroS.cadCarro(c);
                jbLimpar.doClick();
                //addRowToTable();
                addRowToTableBD();
                JOptionPane.showMessageDialog(this, "Carro foi salvo com sucesso!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro!" + ex.getMessage(), "erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jtfPortasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPortasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPortasActionPerformed

    private void jtCarroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCarroMouseClicked
        // TODO add your handling code here:
        jbDeletar.setEnabled(true);
        jbEditar.setEnabled(true);
        jbSalvar.setEnabled(false);
    }//GEN-LAST:event_jtCarroMouseClicked

    private void jbDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeletarActionPerformed
        // TODO add your handling code here:
        jbEditar.setEnabled(false);
        int linha;
        String placa;
        linha = jtCarro.getSelectedRow();
        placa = (String) jtCarro.getValueAt(linha, 0);

        // Carro c = cadCarros.getByDoc(placa);
        CarroServicos carroS = ServicosFactory.getCarroServicos();
        PessoaServicos pessoaS = ServicosFactory.getPessoaServicos();
        Carro c = new Carro();

        try {
            c = carroS.buscaCarroBD(placa);
        } catch (SQLException ex) {
            Logger.getLogger(carroCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        Object[] resp = {"Sim", "Não"};
        int resposta = JOptionPane.showOptionDialog(this, "Deseja realmente deletar " + c.getPlaca() + "?",
                ".: Deletar :.", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
                null, resp, resp[0]);
        if (resposta == 0) {
            //cadCarros.deletar(c);
            try {
                carroS.deletarCarroBD(c.getIdCarro());
                addRowToTableBD();
                JOptionPane.showMessageDialog(this, "Carro deletado com sucesso!");
            } catch (SQLException ex) {
                Logger.getLogger(carroCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Entedemos sua decisão!", ".:deletar", JOptionPane.INFORMATION_MESSAGE);
        }
        jbDeletar.setEnabled(false);
    }//GEN-LAST:event_jbDeletarActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        // TODO add your handling code here:
        try {
            btnClick = (JButton) evt.getSource();
            jbDeletar.setEnabled(false);
            jbSalvar.setEnabled(false);
            jbEditar.setEnabled(false);
            jbLimpar.setEnabled(true);
            jbConfirmar.setEnabled(true);
            jtfCPFProp.setEnabled(true);
            jbPesqPlaca.setEnabled(false);

            int linha;
            String placa;
            linha = jtCarro.getSelectedRow();
            placa = (String) jtCarro.getValueAt(linha, 0);
            //Carro c = cadCarros.getByDoc(placa);
            CarroServicos carroS = ServicosFactory.getCarroServicos();
            PessoaServicos pessoaS = ServicosFactory.getPessoaServicos();
            Carro c = carroS.buscaCarroBD(placa);

            jtfPlaca.setText(c.getPlaca());
            jcbMarca.setSelectedItem(c.getMarca());
            jtfModelo.setText(c.getModelo());
            jtfAnoModelo.setText(Integer.toString(c.getAnoModelo()));
            jtfAnoFabricacao.setText(Integer.toString(c.getAnoFabricacao()));
            jtfCor.setText(c.getCor());
            jtfPortas.setText(Integer.toString(c.getnPortas()));
            jtfCPFProp.setText(pessoaS.getCPFPessoa(c.getIdPessoa()));
            jlNomeProp.setText(pessoaS.getNomePessoa(c.getIdPessoa()));
        } catch (SQLException ex) {
            Logger.getLogger(carroCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jbEditarActionPerformed

    private void jcbMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbMarcaActionPerformed

    private void jbConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfirmarActionPerformed
        // TODO add your handling code here:
        btnClick = (JButton) evt.getSource();
        if (validaInputs()) {
            try {
                CarroServicos carroS = ServicosFactory.getCarroServicos();
                String placa = jtfPlaca.getText();
                //Carro c = cadCarros.getByDoc(placa);
                Carro c = carroS.buscaCarroBD(jtfPlaca.getText());
                PessoaServicos pessoaS = ServicosFactory.getPessoaServicos();
                
                c.setPlaca(jtfPlaca.getText());
                c.setMarca((String) jcbMarca.getSelectedItem());
                c.setModelo(jtfModelo.getText());
                c.setAnoModelo(Integer.parseInt(jtfAnoModelo.getText()));
                c.setAnoFabricacao(Integer.parseInt(jtfAnoFabricacao.getText()));
                c.setCor(jtfCor.getText());
                c.setnPortas(Integer.parseInt(jtfPortas.getText()));
                c.setIdPessoa (pessoaS.getIdPessoa(jtfCPFProp.getText()));
                carroS.atualizarCarroBD(c);
                addRowToTableBD();

                jbConfirmar.setEnabled(false);
                jbSalvar.setEnabled(true);
                jbLimpar.setEnabled(true);
                jtfPlaca.setEnabled(true);
                String msg = "Dados atualizados com sucesso!";
                JOptionPane.showMessageDialog(this, msg, ".: Atuaalizar :.", JOptionPane.INFORMATION_MESSAGE);
                jbLimpar.doClick();
                jbLimpar.setText("Limpar");
            } catch (SQLException ex) {
                Logger.getLogger(carroCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }
            jTableFilterClear();
        }
    }//GEN-LAST:event_jbConfirmarActionPerformed

    private void jbPesqPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesqPlacaActionPerformed
        // TODO add your handling code here:
        CarroServicos carroS = ServicosFactory.getCarroServicos();
        PessoaServicos pessoaS = ServicosFactory.getPessoaServicos();
        try {
            if (!carroS.verPlaca(jtfPlaca.getText())) {
                DefaultTableModel model = (DefaultTableModel) jtCarro.getModel();
                final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
                jtCarro.setRowSorter(sorter);
                String text = jtfPlaca.getText();
                if (text.length() == 0) {
                    sorter.setRowFilter(null);
                } else {
                    try {
                        sorter.setRowFilter(RowFilter.regexFilter(text));
                    } catch (PatternSyntaxException pse) {
                        JOptionPane.showMessageDialog(this, "Registro não encontrado!");
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(carroCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jbPesqPlacaActionPerformed

    private void jtfModeloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfModeloFocusLost
        // TODO add your handling code here:
        jtfModelo.setText(jtfModelo.getText().toUpperCase());
    }//GEN-LAST:event_jtfModeloFocusLost

    private void jlNomePropFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jlNomePropFocusLost
        // TODO add your handling code here:
        jlNomeProp.setText(jlNomeProp.getText().toUpperCase());
    }//GEN-LAST:event_jlNomePropFocusLost

    private void jtfAnoModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfAnoModeloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfAnoModeloActionPerformed

    private void jtfAnoModeloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfAnoModeloKeyTyped
        // TODO add your handling code here:
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfAnoModeloKeyTyped

    private void jtfPortasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPortasKeyTyped
        // TODO add your handling code here:
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfPortasKeyTyped

    private void jtfCPFPropKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCPFPropKeyTyped
        // TODO add your handling code here:
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfCPFPropKeyTyped

    private void jtfAnoFabricacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfAnoFabricacaoActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jtfAnoFabricacaoActionPerformed

    private void jtfAnoFabricacaoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfAnoFabricacaoKeyTyped
        // TODO add your handling code here:
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfAnoFabricacaoKeyTyped

    private void jtfCPFPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCPFPropActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCPFPropActionPerformed

    private Boolean validaInputs() {
        Boolean verPlaca;
        String placa = jtfPlaca.getText().toUpperCase();
        verPlaca = (placa.length() == 7);
        if (btnClick.getText() == "Salvar") {
            if (!verPlaca) {
                String msg = "Placa invalido, tente novamente";
                JOptionPane.showMessageDialog(this, msg, ".:erro:.", JOptionPane.ERROR_MESSAGE);
                jtfPlaca.requestFocus();
                return false;
            } else if (cadCarros.verPlaca(jtfPlaca.getText())) {
                JOptionPane.showMessageDialog(this,
                        "placa já cadastrado!!!",
                        ".: Erro :.", JOptionPane.ERROR_MESSAGE);
                jtfPlaca.requestFocus();
                return false;
            }
        }
        Calendar cal = GregorianCalendar.getInstance();
        int anoAtual = cal.get(Calendar.YEAR);
        int anoF = Integer.parseInt(jtfAnoFabricacao.getText());
        if (anoF > anoAtual) {
            String msg = "Ano Fabricação invalido";
            JOptionPane.showMessageDialog(this, msg, ".:erro:.", JOptionPane.ERROR_MESSAGE);
            jtfAnoFabricacao.requestFocus();
            return false;
        }
        boolean testaAnoMod;
        int anoMod = Integer.parseInt(jtfAnoModelo.getText());
        testaAnoMod = cadCarros.verAnoMod(anoF, anoMod);
        if (!testaAnoMod) {
            String msg = "Ano modelo invalido";
            JOptionPane.showMessageDialog(this, msg, ".:erro:.", JOptionPane.ERROR_MESSAGE);
            jtfAnoModelo.requestFocus();
            return false;
        }
        if (jcbMarca.getSelectedItem().equals("Selecione...")) {
            String msg = "Selecione uma marca";
            JOptionPane.showMessageDialog(this, msg, ".:erro:.", JOptionPane.ERROR_MESSAGE);
            jcbMarca.requestFocus();
            return false;
        }
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(carroCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(carroCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(carroCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(carroCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new carroCadastro().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(carroCadastro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbConfirmar;
    private javax.swing.JButton jbDeletar;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbPesqPlaca;
    private javax.swing.JButton jbSair;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox<String> jcbMarca;
    private javax.swing.JLabel jlNomeProp;
    private javax.swing.JTable jtCarro;
    private javax.swing.JTextField jtfAnoFabricacao;
    private javax.swing.JTextField jtfAnoModelo;
    private javax.swing.JTextField jtfCPFProp;
    private javax.swing.JTextField jtfCor;
    private javax.swing.JTextField jtfModelo;
    private javax.swing.JTextField jtfPlaca;
    private javax.swing.JTextField jtfPortas;
    // End of variables declaration//GEN-END:variables
}
